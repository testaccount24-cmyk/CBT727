* ------------------------------------------------------------------- *
* COPYVBS                                                             *
*                                                                     *
* THIS PROGRAM READS ANY VB/VBS DISK FILE AND WRITES IT TO A          *
* VBS OUTPUT FILE.                                                    *
*                                                                     *
* USES EXCP TO READ A TRACK AT A TIME, ALLOWING FOR FULL-TRACK BLOCKS *
*                                                                     *
* DD NAMES ARE SYSUT1, SYSUT2 AND SYSPRINT                            *
*                                                                     *
* ------------------------------------------------------------------- *
* 10/17/05 ORIGINAL CODE BY MARTIN KLINE                              *
* ------------------------------------------------------------------- *
         ENTRY COPYVBS
COPYVBS  CSECT
         SAVE  (14,12),,COPYVBS.&SYSDATE.&SYSTIME
         LR    12,15                  SET BASE REG
         USING COPYVBS,12
         LA    2,SAVEAREA             POINT TO SAVE AREA
         ST    13,4(,2)               BACKWARD CHAIN SAVE AREAS
         ST    2,8(,13)               FORWARD CHAIN SAVE AREAS
         LR    13,2                   SET SAVE AREA POINTER
         MVI   IOBFLAG1,B'11000010'
         LA    1,ECB1
         STCM  1,7,IOBECBPT
         LA    1,CCW2
         STCM  1,7,IOBSTART
         LA    1,SYSUT1
         STCM  1,7,IOBDCBPT
* ------------------------------------------------------------------- *
         OPEN  (SYSUT1,,SYSPRINT,OUTPUT,SYSUT2,OUTPUT)   OPEN FILES
         LTR   15,15
         BNZ   EXIT
* ------------------------------------------------------------------- *
         LA    10,SYSUT1
         USING IHADCB,10
         GETMAIN R,LV=32768
         ST    1,RECAREA
* ------------------------------------------------------------------- *
*   READ AN ENTIRE TRACK                                              *
* ------------------------------------------------------------------- *
*
READLOOP L     0,DCBRELAD             GET TTRN
         L     1,DCBDEBAD             DEB ADDRESS
         LA    2,MBBCCHHR             MBBCCHHR FIELD
         STM   8,13,20(13)            SAVE R8-R13
         LR    8,13                   SAVE R8-R13
         L     15,16                  CVTPTR
         L     15,28(,15)             CVTPCNVT
         BALR  14,15                  COMPUTE MBBCCHHR
         LM    8,13,20(8)             RESTORE R8-R13
         LTR   15,15                  SUCCESSFUL?
         BNZ   EOFUT1                 END OF EXTENT, CLOSE
         EXCP  IOB1                   FULL TRACK READ
         WAIT  1,ECB=ECB1
* ------------------------------------------------------------------- *
*   INTERPRET THE ENTIRE TRACK JUST READ                              *
*      R11  =  REMAINING LENGTH OF ALL DATA READ FROM A TRACK         *
*      R10 --> COUNT FIELD OF CURRENT BLOCK                           *
*      R9   =  REMAINING LENGTH OF DATA IN A BLOCK                    *
*      R8  --> DATA OR RECORD IN A BLOCK                              *
* ------------------------------------------------------------------- *
         LM    10,11,CCW4             PTR TO BUFFER AND REQ LENGTH
         USING COUNT,10
         LA    10,0(,10)              START OF BUFFER
         SLR   0,0
         ICM   0,B'0011',IOB1+14      RESIDUAL COUNT
         SLR   11,0                   ACTUAL LENGTH READ
*
BLKLOOP  CLC   COUNTKL(3),=3X'00'     KEY AND DATA LENGTH = 0 ?
         BE    EOFUT1                 YES - THAT'S END OF FILE
*
         SLR   1,1                    CLEAR REG 1
         IC    1,COUNTKL              GET KEY LENGTH
         SLR   9,9                    CLEAR REG 9
         ICM   9,3,COUNTDL            GET DATA LENGTH
         LA    8,COUNT+8(1)           POINT TO DATA FIELD
         CLM   9,3,0(8)               COMPARE DATA LENGTH TO RDW
         BNE   BADBDW                 NOT MATCHED - ERROR
*
         LA    8,4(,8)                POINT PAST BDW
         SH    9,=H'4'                REDUCE REMAINING LENGTH
*
RECLOOP  LTR   9,9                    ANY DATA LEFT IN BLOCK ?
         BZ    NEXTBLK                NO - GO TO NEXT BLOCK
*
         CHI   9,4                    IS REMAINING LENGTH VALID ?
         BL    BADRECL                NO - ERROR
*
         STCM  11,3,HWORD             SAVE REMAINING BLOCK LENGTH
         CLC   HWORD,0(8)             IS RECORD LENGTH OK ?
         BL    BADRECL                YES - INVALID
*
         CLC   0(2,8),=H'32760'       IS REC LENGTH VALID ?
         BH    BADRECL                NO - ERROR
*
         TM    2(8),B'00000011'       PARTIAL RECORD ?
         BZ    NOSEG                  NO - ONLY SEGMENT
         BO    MIDSEG                 YES - MID-SEGMENT
         TM    2(8),B'00000010'       WHAT TYPE OF PARTIAL RECORD ?
         BO    LASTSEG                LAST SEGMENT
*
* ------------------------------------------------------------------- *
*
FIRSTSEG CLI   SEGSTAT,0              LOOKING FOR NEW SEGMENT ?
         BNE   SEGERROR               NO - THIS IS AN ERROR
*
         L     0,RECAREA              OUTPUT AREA
         LH    1,0(8)                 SAME LENGTH
         MVCL  0,8                    COPY RECORD
         MVI   SEGSTAT,1              1 = LOOKING FOR NEXT SEGMENT
         B     RECLOOP                GO PROCESS NEXT RECORD
*
* ------------------------------------------------------------------- *
*
NOSEG    CLI   SEGSTAT,0              LOOKING FOR NEW SEGMENT ?
         BNE   SEGERROR               NO - THIS IS AN ERROR
*
         L     0,RECAREA              OUTPUT AREA
         LH    1,0(8)                 SAME LENGTH
         MVCL  0,8                    COPY RECORD
*
         BAL   14,PUTREC              GO PUT THE RECORD
*
         B     RECLOOP                GO PROCESS NEXT RECORD
*
* ------------------------------------------------------------------- *
*
MIDSEG   CLI   SEGSTAT,0              LOOKING FOR CONTINUATION ?
         BE    SEGERROR               NO - ERROR
*
         L     1,RECAREA              POINT TO OUTPUT RECORD
         LH    1,0(,1)                PICK UP CURRENT LENGTH
         AH    1,0(8)                 ADD NEW SEGMENT LENGTH
         SH    1,=H'4'                MINUS LENGTH OF RDW
         CHI   1,32760                IS IT TOO LONG  ?
         BH    TOOLONG                YES - ERROR
*
         L     14,RECAREA             POINT TO RECORD AREA
         LR    0,14                   COPY POINTER
         AH    0,0(,14)               ADD CURRENT LENGTH
         STH   1,0(,14)               SET NEW LENGTH
         LH    1,0(8)                 COPY NEW SEGMENT LENGTH
         SH    1,=H'4'                MINUS LENGTH OF THE RDW
         SH    9,=H'4'                MINUS LENGTH OF THE RDW
         LA    8,4(,8)                POINT PAST THE RDW
         MVCL  0,8                    COPY NEW SEGMENT
         B     RECLOOP                GO PROCESS NEXT RECORD
*
* ------------------------------------------------------------------- *
*
LASTSEG  CLI   SEGSTAT,0              LOOKING FOR CONTINUATION ?
         BE    SEGERROR               NO - ERROR
*
         L     1,RECAREA              POINT TO OUTPUT RECORD
         LH    1,0(,1)                PICK UP CURRENT LENGTH
         AH    1,0(8)                 ADD NEW SEGMENT LENGTH
         SH    1,=H'4'                MINUS LENGTH OF RDW
         CHI   1,32760                IS IT TOO LONG  ?
         BH    TOOLONG                YES - ERROR
*
         L     14,RECAREA             POINT TO RECORD AREA
         LR    0,14                   COPY POINTER
         AH    0,0(,14)               ADD CURRENT LENGTH
         STH   1,0(,14)               SET NEW LENGTH
         LH    1,0(8)                 COPY NEW SEGMENT LENGTH
         SH    1,=H'4'                MINUS LENGTH OF THE RDW
         SH    9,=H'4'                MINUS LENGTH OF THE RDW
         LA    8,4(,8)                POINT PAST THE RDW
         MVCL  0,8                    COPY NEW SEGMENT
         L     1,RECAREA              POINT TO RECORD
         XC    2(2,1),2(1)            CLEAR THE RDW FLAGS
         BAL   14,PUTREC              GO PUT THE RECORD
*
         MVI   SEGSTAT,0              0 = LOOKING FOR NEW RECORD
         B     RECLOOP                GO PROCESS NEXT RECORD
*
* ------------------------------------------------------------------- *
*
NEXTBLK  SLR   1,1                    CLEAR REG 1
         IC    1,COUNTKL              PICK UP THE KEY LENGTH
         SLR   0,0                    CLEAR REG 0
         ICM   0,3,COUNTDL            PICK UP THE DATA LENGTH
         AR    1,0                    ADD IT TO KEY LENGTH
         LA    1,8(,1)                LENGTH OF ENTIRE CKD
         AR    10,1                   POINT TO NEXT INPUT BLOCK
         SR    11,1                   REDUCE REMAINING LENGTH
         BH    BLKLOOP                IF MORE DATA, PROCESS IT
*
         LA    0,X'0001'              NEXT TRACK
         AH    0,RELAD                TTRN NEXT TRACK
         STH   0,RELAD                TTRN NEXT TRACK
         B     READLOOP               PROCESS NEXT TRACK
*
* ------------------------------------------------------------------- *
*
EOFUT1   CLOSE (SYSUT1,,SYSUT2,,SYSPRINT)
*
EXIT     L     13,4(,13)              POINT TO CALLER'S SAVE AREA
         RETURN (14,12),RC=(15)       RETURN TO CALLER
*
* ------------------------------------------------------------------- *
*  ROUTINE TO USE LOCATE MODE OUTPUT
* ------------------------------------------------------------------- *
*
         DC    4F'0'
PUTREC   STM   14,1,PUTREC-16
         PUT   SYSUT2
         LR    0,1
         L     14,RECAREA
         LH    15,0(,14)
         LR    1,15
         MVCL  0,14
         LM    14,1,PUTREC-16
         BR    14
*
* ------------------------------------------------------------------- *
*  ERROR ROUTINES
* ------------------------------------------------------------------- *
*
         DC    4F'0'
PUTPRINT STM   14,1,PUTPRINT-16
         PUT   SYSPRINT,PRINTREC
         MVI   PRINTREC,C' '
         MVC   PRINTREC+1(L'PRINTREC-1),PRINTREC
         LM    14,1,PUTPRINT-16
         BR    14
*
* ------------------------------------------------------------------- *
*  ERROR ROUTINES
* ------------------------------------------------------------------- *
*
BADRECL  MVC   PRINTREC+1(27),=C'INVALID RECORD LENGTH FOUND'
         BAL   14,PUTPRINT
         LA    15,16
         B     EXIT
*
SEGERROR MVC   PRINTREC+1(21),=C'INVALID SEGMENT FOUND'
         BAL   14,PUTPRINT
         LA    15,16
         B     EXIT
*
BADBDW   MVC   PRINTREC+1(30),=C'INVALID BLOCK DESCRIPTOR FOUND'
         BAL   14,PUTPRINT
         LA    15,16
         B     EXIT
*
TOOLONG  MVC   PRINTREC+1(33),=C'FOUND RECORD MORE THAN 32760 LONG'
         BAL   14,PUTPRINT
         LA    15,16
         B     EXIT
*
* ------------------------------------------------------------------- *
SAVEAREA DC    18F'0'
* ------------------------------------------------------------------- *
WORK9    DC    CL9' '
SEGSTAT  DC    X'00'
HWORD    DC    H'0'
RECAREA  DC    A(0)
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PL,RECFM=VBS,BFTEK=A
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=DA,DEVD=DA,MACRF=E,OPTCD=R
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133
RELAD    EQU   SYSUT1+DCBRELAD-IHADCB
PRINTREC DC    CL133' '
ECB1     DC    A(0)                    ECB
IOB1     DC    XL4'42000000'           FLAG1/2 SENSE1/2
         DC    A(ECB1)                 ECBPTR
         DC    X'00',XL7'00'           FLAG3 CSW
         DC    A(CCW2)                 CCW ADDR
         DC    A(SYSUT1)               DCBPTR
         DC    2A(0)                   RESTR INCAM ERRCT
MBBCCHHR DC    XL8'01'
*                   ------------------ CCW'S -------------------
CCW2     CCW   X'31',MBBCCHHR+3,X'40',5      SEARCH ID EQUAL
CCW3     CCW   X'08',*-8,0,0                 TIC
CCW4     CCW   X'5E',COUNT,X'20',65535       READ MULTIPLE, SLI
* ------------------------------------------------------------------- *
         LTORG
         PRINT NOGEN
         IEZIOB DSECT=NO
*
COUNT    DS    0D                      COUNT
COUNTCC  DS    H
COUNTHH  DS    H
COUNTR   DS    X
COUNTKL  DS    X
COUNTDL  DS    H
KEY      DS    XL8                     KEY
DATA     DS    65535X                  DATA
* ------------------------------------------------------------------- *
         DCBD  DSORG=PS,DEVD=DA
         END
